@page "/EditUser/{CurrentID}"
@using BlazorEducationSystem.Data
@using Microsoft.AspNetCore.Identity;
@inject IdentityUserService userService
@inject NavigationManager NavigationManager

<h2>Update User</h2>
<hr />
<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label>ID: @user.Id</label>
            </div>
            <div class="form-group">
                <label for="UserName" class="control-label">User Name</label>
                <input form="UserName" class="form-control" @bind="@user.UserName" />
            </div>
            <div class="form-group">
                <label for="Email" class="control-label">Email</label>
                <input form="Email" class="form-control" @bind="@user.Email" />
            </div>
            <div class="form-group">
                <label for="UserRole" class="control-label">User Role</label>
                <select @bind="@role" class="form-control">
                    <option value="Student">Student</option>
                    <option value="Teacher">Teacher</option>
                    <option value="Admin">Admin</option>
                </select>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@UpdateUser" value="Update" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>



@code {
    [Parameter]
    public string CurrentID { get; set; }
    IdentityUser user = new IdentityUser();
    string role = "Student";

    protected override async Task OnInitializedAsync()
    {
        user = await Task.Run(() => userService.GetUserByIdAsync(CurrentID));
        //roleId = await Task.Run(() => userService.GetUserRoleAsync(CurrentID));
    }
    protected async Task UpdateUser()
    {
        await userService.UpdateUserAsync(user, role);
        //await userService.UpdateUserRoleAsync(new IdentityUserRole<string> { RoleId = roleId, UserId = user.Id });
        NavigationManager.NavigateTo("Users");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("Users");
    }

}
